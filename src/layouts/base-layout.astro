---
import '../styles/global.css';

export interface Props {
  title?: string;
  description?: string;
  lang?: 'en' | 'ru' | 'pt';
}

const {
  title = 'Curriculum Vitae',
  description = 'Professional resume and portfolio',
  lang = 'en'
} = Astro.props;

// Language-specific configurations
const langConfig = {
  en: { dir: 'ltr', locale: 'en-US' },
  ru: { dir: 'ltr', locale: 'ru-RU' },
  pt: { dir: 'ltr', locale: 'pt-BR' }
};

const currentLang = langConfig[lang];
---

<!DOCTYPE html>
<html lang={lang} dir={currentLang.dir}>
  <head>
    <meta charset="utf-8" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="generator" content={Astro.generator} />
    <meta name="description" content={description} />
    <meta name="robots" content="index, follow" />
    <meta name="color-scheme" content="light dark" />

    <!-- Open Graph -->
    <meta property="og:title" content={title} />
    <meta property="og:description" content={description} />
    <meta property="og:type" content="website" />
    <meta property="og:locale" content={currentLang.locale} />

    <!-- JSON-LD Schema -->
    <script type="application/ld+json">
      {
        "@context": "https://schema.org",
        "@type": "Person",
        "name": "Professional Resume",
        "description": description
      }
    </script>

    <title>{title}</title>

    <!-- Preload critical assets -->
    <link rel="preload" href="/assets/avatar.jpg" as="image" />

    <!-- Theme detection script -->
    <script is:inline>
      (function() {
        const savedTheme = localStorage.getItem('theme');
        const prefersDark = window.matchMedia('(prefers-color-scheme: dark)').matches;
        const shouldUseDark = savedTheme === 'dark' || (!savedTheme && prefersDark);

        if (shouldUseDark) {
          document.documentElement.classList.add('dark');
        }
      })();
    </script>
  </head>
  <body class="bg-gray-50 dark:bg-gray-900 text-gray-900 dark:text-gray-100 antialiased">
    <div class="min-h-screen">
      <slot />
    </div>

    <!-- Theme management script -->
    <script>
      function initTheme() {
        const mediaQuery = window.matchMedia('(prefers-color-scheme: dark)');

        function updateTheme() {
          const savedTheme = localStorage.getItem('theme');
          const prefersDark = mediaQuery.matches;
          const shouldUseDark = savedTheme === 'dark' || (!savedTheme && prefersDark);

          document.documentElement.classList.toggle('dark', shouldUseDark);
        }

        mediaQuery.addEventListener('change', updateTheme);
        updateTheme();
      }

      if (document.readyState === 'loading') {
        document.addEventListener('DOMContentLoaded', initTheme);
      } else {
        initTheme();
      }
    </script>
  </body>
</html>