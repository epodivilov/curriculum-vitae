---
import "../styles/global.css";

export interface Props {
	title?: string;
	description?: string;
	lang?: "en" | "ru" | "pt";
}

const {
	title = "Curriculum Vitae",
	description = "Professional resume and portfolio",
	lang = "en"
} = Astro.props;

// Language-specific configurations
const langConfig = {
	en: { dir: "ltr", locale: "en-US" },
	ru: { dir: "ltr", locale: "ru-RU" },
	pt: { dir: "ltr", locale: "pt-BR" }
};

const currentLang = langConfig[lang];
---

<!doctype html>
<html lang={lang} dir={currentLang.dir}>
	<head>
		<meta charset="utf-8" />
		<link rel="icon" type="image/svg+xml" href={`${import.meta.env.BASE_URL}/favicon.svg`} />
		<meta name="viewport" content="width=device-width, initial-scale=1" />
		<meta name="generator" content={Astro.generator} />
		<meta name="description" content={description} />
		<meta name="robots" content="index, follow" />
		<meta name="color-scheme" content="light dark" />

		<title>{title}</title>

		<!-- Theme detection script -->
		<script is:inline>
			(function () {
				const savedTheme = localStorage.getItem("theme");
				const prefersDark = window.matchMedia("(prefers-color-scheme: dark)").matches;
				const shouldUseDark = savedTheme === "dark" || (!savedTheme && prefersDark);

				if (shouldUseDark) {
					document.documentElement.classList.add("dark");
				}
			})();
		</script>
	</head>
	<body class="bg-gray-50 text-gray-900 antialiased dark:bg-gray-900 dark:text-gray-100">
		<div class="min-h-screen">
			<slot />
		</div>

		<!-- Theme management script -->
		<script>
			function initTheme() {
				const mediaQuery = window.matchMedia("(prefers-color-scheme: dark)");

				function updateTheme() {
					const savedTheme = localStorage.getItem("theme");
					const prefersDark = mediaQuery.matches;
					const shouldUseDark = savedTheme === "dark" || (!savedTheme && prefersDark);

					document.documentElement.classList.toggle("dark", shouldUseDark);
				}

				mediaQuery.addEventListener("change", updateTheme);
				updateTheme();
			}

			if (document.readyState === "loading") {
				document.addEventListener("DOMContentLoaded", initTheme);
			} else {
				initTheme();
			}
		</script>
	</body>
</html>
