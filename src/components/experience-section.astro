---
import type { Language } from '@locales/index'
import { getTranslations } from '@locales/index'
import { getCollection } from 'astro:content'
import { Briefcase, Calendar, CheckCircle } from 'lucide-astro'

export interface Props {
	lang: Language
	class?: string
}

const { lang, class: className = '' } = Astro.props
const t = getTranslations(lang)

// Get experience entries from collection
const experienceEntries = await getCollection('experience')

// Sort by order field
const sortedExperience = experienceEntries.sort((a, b) => a.data.order - b.data.order)

function formatDate(dateString: string, lang: Language): string {
	if (!dateString) return t.common.present

	const date = new Date(dateString + '-01')
	const options: Intl.DateTimeFormatOptions = {
		year: 'numeric',
		month: 'long'
	}

	const locale = lang === 'en' ? 'en-US' : lang === 'ru' ? 'ru-RU' : 'pt-BR'
	return date.toLocaleDateString(locale, options)
}
---

<section class={`bg-white dark:bg-slate-900 ${className}`}>
	<div class="mx-auto max-w-4xl px-6 py-8">
		<h2 class="mb-8 flex items-center text-2xl font-bold text-gray-900 dark:text-gray-100">
			<Briefcase class="mr-3 h-6 w-6 text-blue-600 dark:text-blue-400" />
			{t.sections.workExperience}
		</h2>

		<div class="space-y-8">
			{
				sortedExperience.map((entry) => (
					<div class="rounded-lg bg-gray-50 p-6 shadow-sm transition-shadow hover:shadow-md dark:bg-slate-800 dark:shadow-slate-900/30">
						<div class="mb-4 flex flex-col lg:flex-row lg:items-start lg:justify-between">
							<div class="flex flex-1 flex-col-reverse gap-2 sm:flex-row sm:items-baseline sm:justify-between">
								<div class="flex flex-col">
									<h3 class="text-xl font-bold text-gray-900 dark:text-gray-100">
										{entry.data.position[lang]}
									</h3>
									<h4 class="text-lg font-semibold text-blue-600 dark:text-blue-400">
										{entry.data.company}
									</h4>
								</div>
								<div class="flex flex-row items-center text-sm text-gray-600 dark:text-gray-400">
									<Calendar class="mr-1 h-4 w-4" />
									{formatDate(entry.data.startDate, lang)} -{' '}
									{entry.data.endDate ? formatDate(entry.data.endDate, lang) : t.common.present}
								</div>
							</div>
						</div>

						<div class="mb-6">
							<h5 class="mb-3 text-sm font-semibold tracking-wide text-gray-700 uppercase dark:text-gray-300">
								Key Achievements
							</h5>
							<ul class="space-y-2">
								{entry.data.achievements[lang].map((achievement: string) => (
									<li class="flex items-start">
										<CheckCircle class="mt-0.5 mr-2 h-4 w-4 flex-shrink-0 text-green-500 dark:text-green-400" />
										<span class="text-gray-700 dark:text-gray-300">{achievement}</span>
									</li>
								))}
							</ul>
						</div>

						<div class="mb-4">
							<h5 class="mb-3 text-sm font-semibold tracking-wide text-gray-700 uppercase dark:text-gray-300">
								Technologies Used
							</h5>
							<div class="flex flex-wrap gap-2">
								{entry.data.technologies.map((tech: string) => (
									<span class="inline-flex items-center rounded-full bg-blue-100 px-3 py-1 text-xs font-medium text-blue-800 dark:bg-blue-900 dark:text-blue-200">
										{tech}
									</span>
								))}
							</div>
						</div>
					</div>
				))
			}
		</div>
	</div>
</section>

<style>
	@media print {
		section {
			background: white !important;
			box-shadow: none !important;
		}

		.bg-gray-50 {
			background: #f9fafb !important;
			border: 1px solid #e5e7eb;
		}
	}
</style>
